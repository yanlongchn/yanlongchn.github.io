<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHN-NO.9527 on Github</title>
  <subtitle>Thoughts, stories and ideas.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yanlongchn.com/"/>
  <updated>2016-11-15T08:44:56.805Z</updated>
  <id>http://yanlongchn.com/</id>
  
  <author>
    <name>NO.9527</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>入门级扫盲贴</title>
    <link href="http://yanlongchn.com/2016/11/15/%E5%85%A5%E9%97%A8%E7%BA%A7%E6%89%AB%E7%9B%B2%E8%B4%B4/"/>
    <id>http://yanlongchn.com/2016/11/15/入门级扫盲贴/</id>
    <published>2016-11-15T05:21:50.481Z</published>
    <updated>2016-11-15T08:44:56.805Z</updated>
    
    <content type="html"><![CDATA[<h4 id="数据分析的步骤有哪些？"><a href="#数据分析的步骤有哪些？" class="headerlink" title="数据分析的步骤有哪些？"></a>数据分析的步骤有哪些？</h4><p>数据分析有极广泛的应用范围，这是一个扫盲贴。典型的数据分析可能包含以下三个步骤：</p>
<ol>
<li>探索性数据分析，</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;数据分析的步骤有哪些？&quot;&gt;&lt;a href=&quot;#数据分析的步骤有哪些？&quot; class=&quot;headerlink&quot; title=&quot;数据分析的步骤有哪些？&quot;&gt;&lt;/a&gt;数据分析的步骤有哪些？&lt;/h4&gt;&lt;p&gt;数据分析有极广泛的应用范围，这是一个扫盲贴。典型的数据分析可能包含以
    
    </summary>
    
      <category term="数据" scheme="http://yanlongchn.com/categories/Date/"/>
    
    
      <category term="数据分析" scheme="http://yanlongchn.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="DataAnalysis" scheme="http://yanlongchn.com/tags/DataAnalysis/"/>
    
  </entry>
  
  <entry>
    <title>LetsEncrypt域名加SSL</title>
    <link href="http://yanlongchn.com/2016/11/15/LetsEncrypt%E5%9F%9F%E5%90%8D%E5%8A%A0SSL/"/>
    <id>http://yanlongchn.com/2016/11/15/LetsEncrypt域名加SSL/</id>
    <published>2016-11-15T05:21:50.478Z</published>
    <updated>2016-11-15T08:46:07.566Z</updated>
    
    <content type="html"><![CDATA[<p><strong>CentOS</strong><br>LetsEncrypt域名加SSL</p>
<p>####LetsEncrypt篇<br><code>git clone https://github.com/letsencrypt/letsencrypt</code><br><code>cd letsencrypt</code><br><code>sudo service nginx stop</code><br><code>./letsencrypt-auto certonly --standalone -d your_domain.com</code><br><code>sudo service nginx start</code><br>==将your_domain.com改为自己的域名。==</p>
<p>####Ghost篇<br><code>vi /etc/nginx/conf.d/ghost.conf</code><br>全部清空==(在非插入模式下<br>输入<code>:.,$d</code>)==并粘贴进去下列配置，<br>注意需要更改所有的“your_domain.com”为自己的域名，<br>还需要正确的配置自己的密钥位置。  </p>
<pre><code>server {  
    listen 80;
    server_name  your_domain.com;
    return       301 https://your_domain.com$request_uri;
}

server {  
    listen 443 ssl;
    server_name  your_domain.com;

    ssl_certificate     /etc/letsencrypt/live/your_domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your_domain.com/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    add_header Strict-Transport-Security &quot;max-age=63072000; includeSubyour_domains; preload&quot;;
    add_header X-Frame-Options &quot;DENY&quot;;
    access_log   /var/log/nginx/ghost.log;
    error_log    /var/log/nginx/ghost_error.log;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://127.0.0.1:2368;
        proxy_redirect off;
    }
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;CentOS&lt;/strong&gt;&lt;br&gt;LetsEncrypt域名加SSL&lt;/p&gt;
&lt;p&gt;####LetsEncrypt篇&lt;br&gt;&lt;code&gt;git clone https://github.com/letsencrypt/letsencrypt&lt;/code&gt;
    
    </summary>
    
      <category term="编程" scheme="http://yanlongchn.com/categories/Program/"/>
    
      <category term="博客" scheme="http://yanlongchn.com/categories/Program/Blog/"/>
    
    
      <category term="LetsEncrypt" scheme="http://yanlongchn.com/tags/LetsEncrypt/"/>
    
      <category term="Ghost" scheme="http://yanlongchn.com/tags/Ghost/"/>
    
      <category term="CentOS" scheme="http://yanlongchn.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>centos6.5,32bit,ghostblog安装教程</title>
    <link href="http://yanlongchn.com/2016/11/15/centos6.5,32bit,ghostblog%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://yanlongchn.com/2016/11/15/centos6.5,32bit,ghostblog安装教程/</id>
    <published>2016-11-15T05:21:50.476Z</published>
    <updated>2016-11-15T08:43:31.528Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本环境："><a href="#基本环境：" class="headerlink" title="基本环境："></a>基本环境：</h4><ol>
<li>服务器：BANDWAGON,10G,512M,CENTOS6.5;</li>
<li>本地：WIN10-64b,PUTTY;</li>
</ol>
<h4 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程:"></a>安装过程:</h4><blockquote>
<p>PUTTY，ROOT LOGIN;</p>
</blockquote>
<p><code>yum update
yum groupinstall &quot;Development Tools&quot;</code><br><code>yum install wget</code><br><code>yum install nginx</code><br><code>nginx -v</code><br><code>cd /etc/nginx/conf.d</code><br><code>rm default.conf</code><br><code>vi ghost.conf</code>  </p>
<pre><code>server {
  listen 80;
  server_name domain.com;
  location / {
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   Host      $http_host;
      proxy_pass         http://127.0.0.1:2368;
      proxy_set_header REMOTE-HOST $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
</code></pre><p><code>service nginx restart
chkconfig nginx on</code>  </p>
<p><code>yum install libtool automake autoconf gcc-c++ openssl-devel
cd /tmp</code><br><code>wget http://nodejs.org/dist/v0.12.17/node-v0.12.17.tar.gz
tar -zvxf node-v0.12.17.tar.gz</code><br><code>cd node*
./configure --prefix=/usr 
make</code><br><code>make install</code><br><code>node -v</code><br><code>npm -v</code>  </p>
<p><code>cd /var/www
wget https://ghost.org/zip/ghost-latest.zip -o ghost.zip</code><br><code>unzip ghost.zip -d ghost
cd ghost</code><br><code>mv config.example.js config.js</code></p>
<blockquote>
<p>==vi使用说明:s开始编辑,esc退出,:wq!保存并退出.== </p>
</blockquote>
<p><code>vi config.js</code>  </p>
<pre><code>production: {  
  url: &apos;http://domain.com&apos;,  
  mail: {},
</code></pre><p><code>npm install --production
npm start --production</code><br><code>ctrl+c</code>  </p>
<p><code>npm install pm2 -g</code><br><code>NODE_ENV=production pm2 start index.js --name &quot;ghost&quot;</code><br><code>pm2 startup centos</code><br><code>pm2 save</code>  </p>
<blockquote>
<p>==如果要用mysql，在npm install –production之前执行以下:==</p>
</blockquote>
<p><code>yum install mysql mysql-server
service mysqld start</code><br><code>chkconfig mysqld on</code><br><code>mysql_secure_installation</code>  </p>
<blockquote>
<p>==<strong>y,y,n,y,y</strong>==  </p>
</blockquote>
<p><code>vi /etc/my.cnf</code>  </p>
<pre><code>[client]
default-character-set=utf8  
[mysql]
default-character-set=utf8  
[mysqld]
character-set-server=utf8  
collation-server=utf8_general_ci
</code></pre><p><code>mysql -u root -p</code><br><code>create database ghost;</code><br><code>GRANT ALL PRIVILEGES ON ghostdata.* To &#39;ghost&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;;</code>  </p>
<p>#ghostdata是数据库，ghost是用户名，123456是密码<br><code>FLUSH PRIVILEGES;</code></p>
<p><code>vi config.js</code></p>
<pre><code>production: {  
    url: &apos;domain.com&apos;,
    mail: {},
    database: {
        client: &apos;mysql&apos;
        connection: {
            host     : &apos;127.0.0.1&apos;,
            user     : &apos;ghost&apos;,
            password : &apos;123456&apos;,
            database : &apos;ghostdata&apos;,
            charset  : &apos;utf8&apos;
        },
    server: {
            host: &apos;127.0.0.1&apos;,
            port: &apos;2368&apos;
        }
    }
</code></pre><p>####SS</p>
<blockquote>
<p>shadowsocks</p>
</blockquote>
<p><code>wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</code></p>
<p><code>chmod +x shadowsocks.sh
./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</code></p>
<p><strong>SS卸载</strong>  </p>
<p><code>./shadowsocks.sh uninstalls</code>  </p>
<p><strong>SS多用户配置方案</strong>  </p>
<p><code>vi /etc/shadowsocks.json</code>  </p>
<pre><code>{  
&quot;server&quot;:&quot;0.0.0.0&quot;,  
&quot;local_address&quot;:&quot;127.0.0.1&quot;,  
&quot;local_port&quot;:1080,  
&quot;port_password&quot;:{  
&quot;10086&quot;:&quot;123456&quot;,  
&quot;10087&quot;:&quot;123456&quot;,  
&quot;10088&quot;:&quot;123456&quot;,  
&quot;10089&quot;:&quot;123456&quot;,  
&quot;10090&quot;:&quot;123456&quot;  
},  
&quot;timeout&quot;:600,  
&quot;method&quot;:&quot;aes-256-cfb&quot;,  
&quot;fast\_open&quot;: true  
}  
</code></pre><p><strong>SS管理</strong>  </p>
<p><code>/etc/init.d/shadowsocks start
/etc/init.d/shadowsocks stop
/etc/init.d/shadowsocks restart
/etc/init.d/shadowsocks status</code></p>
<p><strong>SS加速</strong></p>
<p>==net-speeder:==  </p>
<p><code>cd /tmp
wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</code><br><code>rpm -ivh epel-release-X-Y.noarch.rpm
yum install libnet libpcap libnet-devel libpcap-devel</code><br><code>wget https://github.com/snooda/net-speeder/archive/master.zip
unzip master.zip</code><br><code>cd net-*
chmod +x build.sh</code><br><code>sh build.sh
cp ./net_speeder /usr/bin</code></p>
<p><code>ifconfig</code>#确定网卡名  </p>
<p><code>/usr/bin/net_speeder eth0 &quot;000.000.000.000&quot; &gt;/dev/null 2&gt;&amp;1 &amp;</code>#启动  </p>
<p><code>echo &#39;/usr/bin/net_speeder eth0 &quot;000.000.000.000&quot; &gt;/dev/null 2&gt;&amp;1 &amp;&#39; &gt;&gt; /etc/rc.local</code>#开机启动</p>
<p>==开启Hybla(非openvz使用)==  </p>
<p><code>sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control=hybla</code><br><code>vi sysctl.conf</code>  </p>
<blockquote>
<p>net.ipv4.tcp_congestion_control = hybla</p>
</blockquote>
<p>==tcp优化==  </p>
<p><code>vi /etc/security/limits.conf</code>  </p>
<pre><code>* soft nofile 51200  
* hard nofile 51200
</code></pre><p><code>ulimit -n 51200</code><br><code>vi /etc/sysctl.conf</code>  </p>
<pre><code>fs.file-max = 51200  
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.core.netdev_max_backlog = 250000
net.core.somaxconn = 3240000
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 0
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.ip_local_port_range = 10000 65000
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.ipv4.tcp_mtu_probing = 1  
</code></pre><p><code>sysctl -p</code><br><code>/etc/init.d/shadowsocks restart</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;基本环境：&quot;&gt;&lt;a href=&quot;#基本环境：&quot; class=&quot;headerlink&quot; title=&quot;基本环境：&quot;&gt;&lt;/a&gt;基本环境：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;服务器：BANDWAGON,10G,512M,CENTOS6.5;&lt;/li&gt;
&lt;li&gt;本地：WIN10-
    
    </summary>
    
      <category term="编程" scheme="http://yanlongchn.com/categories/Program/"/>
    
      <category term="博客" scheme="http://yanlongchn.com/categories/Program/Blog/"/>
    
    
      <category term="Ghost" scheme="http://yanlongchn.com/tags/Ghost/"/>
    
      <category term="CentOS" scheme="http://yanlongchn.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>证书自动更新任务</title>
    <link href="http://yanlongchn.com/2016/11/14/%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E4%BB%BB%E5%8A%A1/"/>
    <id>http://yanlongchn.com/2016/11/14/证书自动更新任务/</id>
    <published>2016-11-14T11:10:21.000Z</published>
    <updated>2016-11-15T08:44:56.821Z</updated>
    
    <content type="html"><![CDATA[<p>#####增加crontab自动任务<br><code>crontab -l</code><br><code>crontab -e</code><br><code>30 15 13 * * ./certbot-auto renew</code><br><code>15 4 * * * pm2 restart ghost</code><br><code>:wq!</code></p>
<p>#####Python2.6 升级2.7.8<br><code>wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz</code><br><code>tar -xvf Python-2.7.8.tgz</code><br><code>cd Python-2.7.8</code><br><code>./configure --prefix=/usr/local/python2.7</code><br><code>make</code><br><code>make install</code><br>==创建链接来使系统默认python变为python2.7==<br>·mv /usr/bin/python /usr/bin/python2.6.9<br><code>ln -fs /usr/local/python2.7/bin/python2.7 /usr/bin/python</code><br>==修改yum配置(否则yum无法正常运行)==<br><code>vi /usr/bin/yum</code><br>==将第一行的#!/usr/bin/python修改为系统原有的python版本地址#!/usr/bin/python2.6.9==<br>==至此CentOS6.3系统Python已成功升级至2.7.6版本。==</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#####增加crontab自动任务&lt;br&gt;&lt;code&gt;crontab -l&lt;/code&gt;&lt;br&gt;&lt;code&gt;crontab -e&lt;/code&gt;&lt;br&gt;&lt;code&gt;30 15 13 * * ./certbot-auto renew&lt;/code&gt;&lt;br&gt;&lt;code&gt;15 4 
    
    </summary>
    
      <category term="编程" scheme="http://yanlongchn.com/categories/Program/"/>
    
      <category term="博客" scheme="http://yanlongchn.com/categories/Program/Blog/"/>
    
    
      <category term="LetsEncrypt" scheme="http://yanlongchn.com/tags/LetsEncrypt/"/>
    
      <category term="Ghost" scheme="http://yanlongchn.com/tags/Ghost/"/>
    
      <category term="CentOS" scheme="http://yanlongchn.com/tags/CentOS/"/>
    
  </entry>
  
</feed>
