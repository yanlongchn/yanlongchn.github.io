<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CPDA@github</title>
  <subtitle>Thoughts, stories and ideas.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yanlongchn.github.io/"/>
  <updated>2016-11-22T07:58:28.384Z</updated>
  <id>https://yanlongchn.github.io/</id>
  
  <author>
    <name>NO.9527</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>R-RSTUDIO-RATTLE-SAMPLE</title>
    <link href="https://yanlongchn.github.io/2016/11/21/R-RSTUDIO-RATTLE-SAMPLE/"/>
    <id>https://yanlongchn.github.io/2016/11/21/R-RSTUDIO-RATTLE-SAMPLE/</id>
    <published>2016-11-21T04:53:00.000Z</published>
    <updated>2016-11-22T07:58:28.384Z</updated>
    
    <content type="html"><![CDATA[<h4 id="R安装"><a href="#R安装" class="headerlink" title="R安装"></a>R安装</h4><ol>
<li>R安装包下载地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/CRAN/index.html" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/CRAN/index.html</a>  </li>
<li>R函数包下载地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/CRAN/" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/CRAN/</a>  </li>
<li>RSTUDIO下载地址：<a href="https://www.rstudio.com/products/rstudio/download/" target="_blank" rel="external">https://www.rstudio.com/products/rstudio/download/</a>  </li>
</ol>
<h4 id="R基础环境配置"><a href="#R基础环境配置" class="headerlink" title="R基础环境配置"></a>R基础环境配置</h4><p><code>&gt; install.package(&quot;RGtk2&quot;)</code><br><code>&gt; install.package(&quot;rattle&quot;)</code><br><code>&gt; install.package(&quot;caret&quot;)</code>  </p>
<a id="more"></a>
<h4 id="sample函数"><a href="#sample函数" class="headerlink" title="sample函数"></a>sample函数</h4><h6 id="随机抽"><a href="#随机抽" class="headerlink" title="随机抽"></a>随机抽</h6><p>引入一个随机种子<br><code>&gt; set.seed(1234)</code><br>创建对象x，由1~10组成<br><code>&gt; x &lt;- seq(1,10);x</code><br>        [1]  1  2  3  4  5  6  7  8  9 10<br>利用sample进行无放回抽样<br><code>&gt; a &lt;-sample(x,5,replace = FALSE);a</code><br>        [1] 2 6 5 8 9<br>利用sample进行有放回抽样<br><code>&gt; a &lt;-sample(x,5,replace = TRUE);a</code><br>        [1] 7 1 3 7 6<br>利用sample进行有放回抽样<br><code>&gt; a &lt;-sample(x,8,replace = TRUE);a</code><br>        [1]  7  6  3 10  3  9  3  3<br>利用sample进行无放回抽样<br><code>&gt; a &lt;-sample(x,8,replace = FALSE);a</code><br>        [1] 2 3 9 8 1 6 5 7  </p>
<h6 id="等比抽"><a href="#等比抽" class="headerlink" title="等比抽"></a>等比抽</h6><p><code>&gt; rate &lt;- sum(user$是否付费==0)/nrow(user)</code><br><code>&gt; d &lt;- 1:nrow(user)</code><br><code>&gt; index1 &lt;- sample(d[user$是否付费==0],10000*rate)</code><br><code>&gt; index2 &lt;- sample(d[user$是否付费==1],10000*(1-rate))</code><br><code>&gt; user_sample1 &lt;- user[c(index1,index2),]</code>  </p>
<h4 id="createDataPartition函数"><a href="#createDataPartition函数" class="headerlink" title="createDataPartition函数"></a>createDataPartition函数</h4><p><code>&gt; library(&quot;caret&quot;)</code><br><code>&gt; iris &lt;- read_csv(&quot;F:/SPSS/sample/iris.csv&quot;)</code><br><code>&gt; splitindex &lt;- createDataPartition(iris$Species,times=1,p=0.1,list = FALSE)</code><br><code>&gt; splitindex</code>  </p>
<pre><code>      Resample1
 [1,]         3
 [2,]        13
 [3,]        15
 [4,]        22
 [5,]        42
 [6,]        59
 [7,]        60
 [8,]        62
 [9,]        76
[10,]        87
[11,]       115
[12,]       127
[13,]       131
[14,]       140
[15,]       150  
</code></pre><p><code>&gt; sample &lt;- iris[splitindex,]</code><br><code>&gt; table(sample$Species);</code>  </p>
<pre><code>setosa versicolor  virginica 
 5          5          5 
</code></pre><p><code>&gt; prop.table(table(sample$Species))</code>  </p>
<pre><code>setosa versicolor  virginica 
 0.3333333  0.3333333  0.333333  
</code></pre><h4 id="数据哑变量处理-虚拟化处理dummyVars"><a href="#数据哑变量处理-虚拟化处理dummyVars" class="headerlink" title="数据哑变量处理(虚拟化处理dummyVars)"></a>数据哑变量处理(虚拟化处理dummyVars)</h4><p><code>&gt; head(iris)</code>  </p>
<pre><code>A   B   C   D Species
1 5.1 3.5 1.4 0.2  setosa
2 4.9 3.0 1.4 0.2  setosa
3 4.7 3.2 1.3 0.2  setosa
4 4.6 3.1 1.5 0.2  setosa
5 5.0 3.6 1.4 0.2  setosa
6 5.4 3.9 1.7 0.4  setosa  
</code></pre><p><code>&gt; colnames(iris)</code>  </p>
<pre><code>[1] &quot;A&quot;       &quot;B&quot;       &quot;C&quot;       &quot;D&quot;       &quot;Species&quot;  
</code></pre><p><code>&gt; fit &lt;- lm(A~.,data = iris)</code><br><code>&gt; summary(fit)</code>  </p>
<pre><code>Call:
lm(formula = A ~ ., data = iris)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.79411 -0.22421  0.00549  0.20443  0.73305 

Coefficients:
                  Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)        2.15858    0.27939   7.726 1.73e-12 ***
B                  0.50107    0.08615   5.816 3.73e-08 ***
C                  0.82879    0.06829  12.136  &lt; 2e-16 ***
D                 -0.32210    0.15128  -2.129  0.03494 *  
Speciesversicolor -0.71408    0.24015  -2.974  0.00345 ** 
Speciesvirginica  -1.00962    0.33404  -3.022  0.00297 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.3064 on 144 degrees of freedom
Multiple R-squared:  0.8677,    Adjusted R-squared:  0.8631 
F-statistic: 188.8 on 5 and 144 DF,  p-value: &lt; 2.2e-16  
</code></pre><p><code>&gt; str(iris)</code>  </p>
<pre><code>Classes ‘tbl_df’, ‘tbl’ and &apos;data.frame&apos;:    150 obs. of  5 variables:
 $ A      : num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...
 $ B      : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...
 $ C      : num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...
 $ D      : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...
 $ Species: chr  &quot;setosa&quot; &quot;setosa&quot; &quot;setosa&quot; &quot;setosa&quot; ...  
</code></pre><p>dummyVars用法<br><code>dummyVars(formula,data,sep=&quot;.&quot;,levelsOnly=FALSE,fullRank=FALSE,…)</code><br><code>&gt; dmy &lt;- dummyVars(~.,data = iris,sep = &quot;-&quot;)</code><br><code>&gt; trsf &lt;- data.frame(predict(dmy,newdata=iris))</code><br><code>&gt; trsf</code>  </p>
<pre><code>    A   B   C   D Speciessetosa Speciesversicolor Speciesvirginica
1   5.1 3.5 1.4 0.2             1                 0                0
2   4.9 3.0 1.4 0.2             1                 0                0
3   4.7 3.2 1.3 0.2             1                 0                0
4   4.6 3.1 1.5 0.2             1                 0                0
5   5.0 3.6 1.4 0.2             1                 0                0
6   5.4 3.9 1.7 0.4             1                 0                0
7   4.6 3.4 1.4 0.3             1                 0                0
8   5.0 3.4 1.5 0.2             1                 0                0
9   4.4 2.9 1.4 0.2             1                 0                0
10  4.9 3.1 1.5 0.1             1                 0                0
 [ reached getOption(&quot;max.print&quot;) -- omitted 140 rows ]
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;R安装&quot;&gt;&lt;a href=&quot;#R安装&quot; class=&quot;headerlink&quot; title=&quot;R安装&quot;&gt;&lt;/a&gt;R安装&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;R安装包下载地址：&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/index.html&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/CRAN/index.html&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;R函数包下载地址：&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;RSTUDIO下载地址：&lt;a href=&quot;https://www.rstudio.com/products/rstudio/download/&quot;&gt;https://www.rstudio.com/products/rstudio/download/&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;R基础环境配置&quot;&gt;&lt;a href=&quot;#R基础环境配置&quot; class=&quot;headerlink&quot; title=&quot;R基础环境配置&quot;&gt;&lt;/a&gt;R基础环境配置&lt;/h4&gt;&lt;p&gt;&lt;code&gt;&amp;gt; install.package(&amp;quot;RGtk2&amp;quot;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt; install.package(&amp;quot;rattle&amp;quot;)&lt;/code&gt;&lt;br&gt;&lt;code&gt;&amp;gt; install.package(&amp;quot;caret&amp;quot;)&lt;/code&gt;  &lt;/p&gt;
    
    </summary>
    
      <category term="数据" scheme="https://yanlongchn.github.io/categories/Date/"/>
    
    
      <category term="数据分析" scheme="https://yanlongchn.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="R" scheme="https://yanlongchn.github.io/tags/R/"/>
    
      <category term="RSTUDIO" scheme="https://yanlongchn.github.io/tags/RSTUDIO/"/>
    
      <category term="RATTLE" scheme="https://yanlongchn.github.io/tags/RATTLE/"/>
    
  </entry>
  
  <entry>
    <title>如何用SPSS和Clementine处理缺失值、离群值、极值？</title>
    <link href="https://yanlongchn.github.io/2016/11/17/%E5%A6%82%E4%BD%95%E7%94%A8SPSS%E5%92%8CClementine%E5%A4%84%E7%90%86%E7%BC%BA%E5%A4%B1%E5%80%BC%E3%80%81%E7%A6%BB%E7%BE%A4%E5%80%BC%E3%80%81%E6%9E%81%E5%80%BC%EF%BC%9F/"/>
    <id>https://yanlongchn.github.io/2016/11/17/如何用SPSS和Clementine处理缺失值、离群值、极值？/</id>
    <published>2016-11-17T06:00:20.000Z</published>
    <updated>2016-11-17T09:00:12.160Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、什么是预处理、预分析？"><a href="#一、什么是预处理、预分析？" class="headerlink" title="一、什么是预处理、预分析？"></a>一、什么是预处理、预分析？</h4><p>&emsp;&emsp;高质量数据是数据分析的前提和分析结论可靠性的保障。尽管在获取数据源时数据分析师格外谨慎，耗费大量的时间，但数据质量仍然需持续关注。不管是一手还是二手数据源，总是会存在一些质量问题。同时，为了满足数据分析、挖掘的实际需要，对噪声数据如何处理，是丢弃还是补充，或者重新计算新的数据变量，这些不是随意决定的，这就是数据预处理的一个过程，是在数据分析、挖掘开始前对数据源的审核和判断，是数据分析必不可少的一项。本文暂只简单讨论一下缺失值、异常值的处理。</p>
<a id="more"></a>
<h4 id="二、如何发现数据质量问题，例如，如何发现缺失值？"><a href="#二、如何发现数据质量问题，例如，如何发现缺失值？" class="headerlink" title="二、如何发现数据质量问题，例如，如何发现缺失值？"></a>二、如何发现数据质量问题，例如，如何发现缺失值？</h4><h5 id="1、SPSS是如何做到的？"><a href="#1、SPSS是如何做到的？" class="headerlink" title="1、SPSS是如何做到的？"></a>1、SPSS是如何做到的？</h5><p>（1）系统缺失值、空白值</p>
<p>每一个变量均有可能出现系统缺失或者空白，当数据量巨大时我们根本无法用眼睛看出是否有缺失，最明智的做法是把这项任务交给数据分析工具，比如Excel，可通过数据有效性、筛选、查找、计数等功能去实现，如果是SPSS数据源，可以通过描述统计之“频率”项来实现。</p>
<p><a href="http://www.datasoldier.net/post/yuchuli.html" target="_blank" rel="external">http://www.datasoldier.net/post/yuchuli.html</a><br><a href="http://www.afenxi.com/post/3872" target="_blank" rel="external">http://www.afenxi.com/post/3872</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、什么是预处理、预分析？&quot;&gt;&lt;a href=&quot;#一、什么是预处理、预分析？&quot; class=&quot;headerlink&quot; title=&quot;一、什么是预处理、预分析？&quot;&gt;&lt;/a&gt;一、什么是预处理、预分析？&lt;/h4&gt;&lt;p&gt;&amp;emsp;&amp;emsp;高质量数据是数据分析的前提和分析结论可靠性的保障。尽管在获取数据源时数据分析师格外谨慎，耗费大量的时间，但数据质量仍然需持续关注。不管是一手还是二手数据源，总是会存在一些质量问题。同时，为了满足数据分析、挖掘的实际需要，对噪声数据如何处理，是丢弃还是补充，或者重新计算新的数据变量，这些不是随意决定的，这就是数据预处理的一个过程，是在数据分析、挖掘开始前对数据源的审核和判断，是数据分析必不可少的一项。本文暂只简单讨论一下缺失值、异常值的处理。&lt;/p&gt;
    
    </summary>
    
      <category term="数据" scheme="https://yanlongchn.github.io/categories/Date/"/>
    
      <category term="SPSS" scheme="https://yanlongchn.github.io/categories/Date/Spss/"/>
    
    
      <category term="数据分析" scheme="https://yanlongchn.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="SPSS" scheme="https://yanlongchn.github.io/tags/categories-spss/"/>
    
      <category term="Clementine" scheme="https://yanlongchn.github.io/tags/Clementine/"/>
    
  </entry>
  
  <entry>
    <title>入门级扫盲贴</title>
    <link href="https://yanlongchn.github.io/2016/11/15/%E5%85%A5%E9%97%A8%E7%BA%A7%E6%89%AB%E7%9B%B2%E8%B4%B4/"/>
    <id>https://yanlongchn.github.io/2016/11/15/入门级扫盲贴/</id>
    <published>2016-11-15T05:21:50.481Z</published>
    <updated>2016-11-16T04:25:12.548Z</updated>
    
    <content type="html"><![CDATA[<h4 id="数据分析的步骤有哪些？"><a href="#数据分析的步骤有哪些？" class="headerlink" title="数据分析的步骤有哪些？"></a>数据分析的步骤有哪些？</h4><p>数据分析有极广泛的应用范围，这是一个扫盲贴。典型的数据分析可能包含以下三个步骤：<br><a id="more"></a></p>
<ol>
<li>探索性数据分析，</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;数据分析的步骤有哪些？&quot;&gt;&lt;a href=&quot;#数据分析的步骤有哪些？&quot; class=&quot;headerlink&quot; title=&quot;数据分析的步骤有哪些？&quot;&gt;&lt;/a&gt;数据分析的步骤有哪些？&lt;/h4&gt;&lt;p&gt;数据分析有极广泛的应用范围，这是一个扫盲贴。典型的数据分析可能包含以下三个步骤：&lt;br&gt;
    
    </summary>
    
      <category term="数据" scheme="https://yanlongchn.github.io/categories/Date/"/>
    
    
      <category term="数据分析" scheme="https://yanlongchn.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="DataAnalysis" scheme="https://yanlongchn.github.io/tags/DataAnalysis/"/>
    
  </entry>
  
  <entry>
    <title>LetsEncrypt域名加SSL</title>
    <link href="https://yanlongchn.github.io/2016/11/15/LetsEncrypt%E5%9F%9F%E5%90%8D%E5%8A%A0SSL/"/>
    <id>https://yanlongchn.github.io/2016/11/15/LetsEncrypt域名加SSL/</id>
    <published>2016-11-15T05:21:50.478Z</published>
    <updated>2016-11-17T06:36:51.405Z</updated>
    
    <content type="html"><![CDATA[<p><strong>CentOS</strong><br>LetsEncrypt域名加SSL</p>
<h4 id="LetsEncrypt篇"><a href="#LetsEncrypt篇" class="headerlink" title="LetsEncrypt篇"></a>LetsEncrypt篇</h4><p><code>git clone https://github.com/letsencrypt/letsencrypt</code><br><code>cd letsencrypt</code><br><code>sudo service nginx stop</code><br><code>./letsencrypt-auto certonly --standalone -d your_domain.com</code><br><code>sudo service nginx start</code><br>==将your_domain.com改为自己的域名。==</p>
<a id="more"></a>
<h4 id="Ghost篇"><a href="#Ghost篇" class="headerlink" title="Ghost篇"></a>Ghost篇</h4><p><code>vi /etc/nginx/conf.d/ghost.conf</code><br>全部清空==(在非插入模式下<br>输入<code>:.,$d</code>)==并粘贴进去下列配置，<br>注意需要更改所有的“your_domain.com”为自己的域名，<br>还需要正确的配置自己的密钥位置。  </p>
<pre><code>server {  
    listen 80;
    server_name  your_domain.com;
    return       301 https://your_domain.com$request_uri;
}

server {  
    listen 443 ssl;
    server_name  your_domain.com;

    ssl_certificate     /etc/letsencrypt/live/your_domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your_domain.com/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    add_header Strict-Transport-Security &quot;max-age=63072000; includeSubyour_domains; preload&quot;;
    add_header X-Frame-Options &quot;DENY&quot;;
    access_log   /var/log/nginx/ghost.log;
    error_log    /var/log/nginx/ghost_error.log;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header HOST $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://127.0.0.1:2368;
        proxy_redirect off;
    }
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;CentOS&lt;/strong&gt;&lt;br&gt;LetsEncrypt域名加SSL&lt;/p&gt;
&lt;h4 id=&quot;LetsEncrypt篇&quot;&gt;&lt;a href=&quot;#LetsEncrypt篇&quot; class=&quot;headerlink&quot; title=&quot;LetsEncrypt篇&quot;&gt;&lt;/a&gt;LetsEncrypt篇&lt;/h4&gt;&lt;p&gt;&lt;code&gt;git clone https://github.com/letsencrypt/letsencrypt&lt;/code&gt;&lt;br&gt;&lt;code&gt;cd letsencrypt&lt;/code&gt;&lt;br&gt;&lt;code&gt;sudo service nginx stop&lt;/code&gt;&lt;br&gt;&lt;code&gt;./letsencrypt-auto certonly --standalone -d your_domain.com&lt;/code&gt;&lt;br&gt;&lt;code&gt;sudo service nginx start&lt;/code&gt;&lt;br&gt;==将your_domain.com改为自己的域名。==&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://yanlongchn.github.io/categories/Program/"/>
    
      <category term="博客" scheme="https://yanlongchn.github.io/categories/Program/Blog/"/>
    
    
      <category term="Ghost" scheme="https://yanlongchn.github.io/tags/Ghost/"/>
    
      <category term="CentOS" scheme="https://yanlongchn.github.io/tags/CentOS/"/>
    
      <category term="LetsEncrypt" scheme="https://yanlongchn.github.io/tags/LetsEncrypt/"/>
    
  </entry>
  
  <entry>
    <title>centos6.5,32bit,ghostblog安装教程</title>
    <link href="https://yanlongchn.github.io/2016/11/15/centos6.5,32bit,ghostblog%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://yanlongchn.github.io/2016/11/15/centos6.5,32bit,ghostblog安装教程/</id>
    <published>2016-11-15T05:21:50.476Z</published>
    <updated>2016-11-17T06:36:26.102Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本环境："><a href="#基本环境：" class="headerlink" title="基本环境："></a>基本环境：</h4><ol>
<li>服务器：BANDWAGON,10G,512M,CENTOS6.5;</li>
<li>本地：WIN10-64b,PUTTY;</li>
</ol>
<a id="more"></a>
<h4 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程:"></a>安装过程:</h4><blockquote>
<p>PUTTY，ROOT LOGIN;</p>
</blockquote>
<p><code>yum update
yum groupinstall &quot;Development Tools&quot;</code><br><code>yum install wget</code><br><code>yum install nginx</code><br><code>nginx -v</code><br><code>cd /etc/nginx/conf.d</code><br><code>rm default.conf</code><br><code>vi ghost.conf</code>  </p>
<pre><code>server {
  listen 80;
  server_name domain.com;
  location / {
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   Host      $http_host;
      proxy_pass         http://127.0.0.1:2368;
      proxy_set_header REMOTE-HOST $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
</code></pre><p><code>service nginx restart
chkconfig nginx on</code>  </p>
<p><code>yum install libtool automake autoconf gcc-c++ openssl-devel
cd /tmp</code><br><code>wget http://nodejs.org/dist/v0.12.17/node-v0.12.17.tar.gz
tar -zvxf node-v0.12.17.tar.gz</code><br><code>cd node*
./configure --prefix=/usr 
make</code><br><code>make install</code><br><code>node -v</code><br><code>npm -v</code>  </p>
<p><code>cd /var/www
wget https://ghost.org/zip/ghost-latest.zip -o ghost.zip</code><br><code>unzip ghost.zip -d ghost
cd ghost</code><br><code>mv config.example.js config.js</code></p>
<blockquote>
<p>==vi使用说明:s开始编辑,esc退出,:wq!保存并退出.== </p>
</blockquote>
<p><code>vi config.js</code>  </p>
<pre><code>production: {  
  url: &apos;http://domain.com&apos;,  
  mail: {},
</code></pre><p><code>npm install --production
npm start --production</code><br><code>ctrl+c</code>  </p>
<p><code>npm install pm2 -g</code><br><code>NODE_ENV=production pm2 start index.js --name &quot;ghost&quot;</code><br><code>pm2 startup centos</code><br><code>pm2 save</code>  </p>
<blockquote>
<p>==如果要用mysql，在npm install –production之前执行以下:==</p>
</blockquote>
<p><code>yum install mysql mysql-server
service mysqld start</code><br><code>chkconfig mysqld on</code><br><code>mysql_secure_installation</code>  </p>
<blockquote>
<p>==<strong>y,y,n,y,y</strong>==  </p>
</blockquote>
<p><code>vi /etc/my.cnf</code>  </p>
<pre><code>[client]
default-character-set=utf8  
[mysql]
default-character-set=utf8  
[mysqld]
character-set-server=utf8  
collation-server=utf8_general_ci
</code></pre><p><code>mysql -u root -p</code><br><code>create database ghost;</code><br><code>GRANT ALL PRIVILEGES ON ghostdata.* To &#39;ghost&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;;</code>  </p>
<p>#ghostdata是数据库，ghost是用户名，123456是密码<br><code>FLUSH PRIVILEGES;</code></p>
<p><code>vi config.js</code></p>
<pre><code>production: {  
    url: &apos;domain.com&apos;,
    mail: {},
    database: {
        client: &apos;mysql&apos;
        connection: {
            host     : &apos;127.0.0.1&apos;,
            user     : &apos;ghost&apos;,
            password : &apos;123456&apos;,
            database : &apos;ghostdata&apos;,
            charset  : &apos;utf8&apos;
        },
    server: {
            host: &apos;127.0.0.1&apos;,
            port: &apos;2368&apos;
        }
    }
</code></pre><h4 id="SS"><a href="#SS" class="headerlink" title="SS"></a>SS</h4><blockquote>
<p>shadowsocks</p>
</blockquote>
<p><code>wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</code></p>
<p><code>chmod +x shadowsocks.sh
./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</code></p>
<p><strong>SS卸载</strong>  </p>
<p><code>./shadowsocks.sh uninstalls</code>  </p>
<p><strong>SS多用户配置方案</strong>  </p>
<p><code>vi /etc/shadowsocks.json</code>  </p>
<pre><code>{  
&quot;server&quot;:&quot;0.0.0.0&quot;,  
&quot;local_address&quot;:&quot;127.0.0.1&quot;,  
&quot;local_port&quot;:1080,  
&quot;port_password&quot;:{  
&quot;10086&quot;:&quot;123456&quot;,  
&quot;10087&quot;:&quot;123456&quot;,  
&quot;10088&quot;:&quot;123456&quot;,  
&quot;10089&quot;:&quot;123456&quot;,  
&quot;10090&quot;:&quot;123456&quot;  
},  
&quot;timeout&quot;:600,  
&quot;method&quot;:&quot;aes-256-cfb&quot;,  
&quot;fast\_open&quot;: true  
}  
</code></pre><p><strong>SS管理</strong>  </p>
<p><code>/etc/init.d/shadowsocks start
/etc/init.d/shadowsocks stop
/etc/init.d/shadowsocks restart
/etc/init.d/shadowsocks status</code></p>
<p><strong>SS加速</strong></p>
<p>==net-speeder:==  </p>
<p><code>cd /tmp
wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</code><br><code>rpm -ivh epel-release-X-Y.noarch.rpm
yum install libnet libpcap libnet-devel libpcap-devel</code><br><code>wget https://github.com/snooda/net-speeder/archive/master.zip
unzip master.zip</code><br><code>cd net-*
chmod +x build.sh</code><br><code>sh build.sh
cp ./net_speeder /usr/bin</code></p>
<p><code>ifconfig</code>#确定网卡名  </p>
<p><code>/usr/bin/net_speeder eth0 &quot;000.000.000.000&quot; &gt;/dev/null 2&gt;&amp;1 &amp;</code>#启动  </p>
<p><code>echo &#39;/usr/bin/net_speeder eth0 &quot;000.000.000.000&quot; &gt;/dev/null 2&gt;&amp;1 &amp;&#39; &gt;&gt; /etc/rc.local</code>#开机启动</p>
<p>==开启Hybla(非openvz使用)==  </p>
<p><code>sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control=hybla</code><br><code>vi sysctl.conf</code>  </p>
<blockquote>
<p>net.ipv4.tcp_congestion_control = hybla</p>
</blockquote>
<p>==tcp优化==  </p>
<p><code>vi /etc/security/limits.conf</code>  </p>
<pre><code>* soft nofile 51200  
* hard nofile 51200
</code></pre><p><code>ulimit -n 51200</code><br><code>vi /etc/sysctl.conf</code>  </p>
<pre><code>fs.file-max = 51200  
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.core.netdev_max_backlog = 250000
net.core.somaxconn = 3240000
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 0
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.ip_local_port_range = 10000 65000
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.ipv4.tcp_mtu_probing = 1  
</code></pre><p><code>sysctl -p</code><br><code>/etc/init.d/shadowsocks restart</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;基本环境：&quot;&gt;&lt;a href=&quot;#基本环境：&quot; class=&quot;headerlink&quot; title=&quot;基本环境：&quot;&gt;&lt;/a&gt;基本环境：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;服务器：BANDWAGON,10G,512M,CENTOS6.5;&lt;/li&gt;
&lt;li&gt;本地：WIN10-64b,PUTTY;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="编程" scheme="https://yanlongchn.github.io/categories/Program/"/>
    
      <category term="博客" scheme="https://yanlongchn.github.io/categories/Program/Blog/"/>
    
    
      <category term="Ghost" scheme="https://yanlongchn.github.io/tags/Ghost/"/>
    
      <category term="CentOS" scheme="https://yanlongchn.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>证书自动更新任务</title>
    <link href="https://yanlongchn.github.io/2016/11/14/%E8%AF%81%E4%B9%A6%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E4%BB%BB%E5%8A%A1/"/>
    <id>https://yanlongchn.github.io/2016/11/14/证书自动更新任务/</id>
    <published>2016-11-14T11:10:21.000Z</published>
    <updated>2016-11-17T06:36:51.427Z</updated>
    
    <content type="html"><![CDATA[<h5 id="增加crontab自动任务"><a href="#增加crontab自动任务" class="headerlink" title="增加crontab自动任务"></a>增加crontab自动任务</h5><p><code>crontab -l</code><br><code>crontab -e</code><br><code>30 15 13 * * ./certbot-auto renew</code><br><code>15 4 * * * pm2 restart ghost</code><br><code>:wq!</code><br><a id="more"></a></p>
<h5 id="Python2-6-升级2-7-8"><a href="#Python2-6-升级2-7-8" class="headerlink" title="Python2.6 升级2.7.8"></a>Python2.6 升级2.7.8</h5><p><code>wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz</code><br><code>tar -xvf Python-2.7.8.tgz</code><br><code>cd Python-2.7.8</code><br><code>./configure --prefix=/usr/local/python2.7</code><br><code>make</code><br><code>make install</code><br>==创建链接来使系统默认python变为python2.7==<br>·mv /usr/bin/python /usr/bin/python2.6.9<br><code>ln -fs /usr/local/python2.7/bin/python2.7 /usr/bin/python</code><br>==修改yum配置(否则yum无法正常运行)==<br><code>vi /usr/bin/yum</code><br>==将第一行的#!/usr/bin/python修改为系统原有的python版本地址#!/usr/bin/python2.6.9==<br>==至此CentOS6.3系统Python已成功升级至2.7.6版本。==</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;增加crontab自动任务&quot;&gt;&lt;a href=&quot;#增加crontab自动任务&quot; class=&quot;headerlink&quot; title=&quot;增加crontab自动任务&quot;&gt;&lt;/a&gt;增加crontab自动任务&lt;/h5&gt;&lt;p&gt;&lt;code&gt;crontab -l&lt;/code&gt;&lt;br&gt;&lt;code&gt;crontab -e&lt;/code&gt;&lt;br&gt;&lt;code&gt;30 15 13 * * ./certbot-auto renew&lt;/code&gt;&lt;br&gt;&lt;code&gt;15 4 * * * pm2 restart ghost&lt;/code&gt;&lt;br&gt;&lt;code&gt;:wq!&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="编程" scheme="https://yanlongchn.github.io/categories/Program/"/>
    
      <category term="博客" scheme="https://yanlongchn.github.io/categories/Program/Blog/"/>
    
    
      <category term="Ghost" scheme="https://yanlongchn.github.io/tags/Ghost/"/>
    
      <category term="CentOS" scheme="https://yanlongchn.github.io/tags/CentOS/"/>
    
      <category term="LetsEncrypt" scheme="https://yanlongchn.github.io/tags/LetsEncrypt/"/>
    
  </entry>
  
</feed>
