{"meta":{"title":"CPDA@github","subtitle":"Thoughts, stories and ideas.","description":"yanlongchn,github,hexo","author":"NO.9527","url":"https://yanlongchn.github.io"},"pages":[{"title":"Categories","date":"2016-11-15T05:51:50.601Z","updated":"2016-11-15T05:51:50.601Z","comments":true,"path":"categories/index.html","permalink":"https://yanlongchn.github.io/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2016-11-15T06:46:16.422Z","updated":"2016-11-15T06:46:16.422Z","comments":false,"path":"tags/index.html","permalink":"https://yanlongchn.github.io/tags/index.html","excerpt":"","text":""},{"title":"TodoList","date":"2016-12-07T08:37:32.202Z","updated":"2016-12-07T08:37:32.202Z","comments":false,"path":"todolist/index.html","permalink":"https://yanlongchn.github.io/todolist/index.html","excerpt":"","text":"费用核销 10月制作费核销--咸阳延期至1月份核销 宝鸡核销资料已收到,待核销 咸阳乡镇核销资料已修改好,待核销 全省12月费用项目导入 宝鸡问题 爆炸签至少50张投放照片； 门带地贴的投放照片； 咸阳乡镇资料少店招投放协议； SFA 咸阳部分业务员手机欠费问题 延安线路图规划 渭南李涛的客户丢失 Learning 撰写HEXO博客搭建以及美化过程 撰写UBUNTU14.04-ghost-letsencrypt-shadowsocks教程 撰写ubuntu-更改内核安装serverSpeeder教程"}],"posts":[{"title":"R版本更新 - installr包","slug":"R版本更新-installr包","date":"2016-12-09T01:34:58.000Z","updated":"2016-12-09T01:39:02.263Z","comments":true,"path":"2016/12/09/R版本更新-installr包/","link":"","permalink":"https://yanlongchn.github.io/2016/12/09/R版本更新-installr包/","excerpt":"&emsp;&emsp;很久没有更新R，但是又想去R的官网上去看有没有版本更新，怎么办？","text":"&emsp;&emsp;很久没有更新R，但是又想去R的官网上去看有没有版本更新，怎么办？ install.packages(“installr”)require(installr)这两行命令可以在RStudio或者R上运行。installr包有一系列的函数updateR, install.R, install.RStudio, install.Rtools, install.pandoc, install.MikTeX, install.Git, install.git, install.GraphicsMagick, install.ImageMagick, check.for.updates.R, install.URL, install.packages.zip.但是最简单实用的函数就是installr()。在WINDOWS系统下的RStudio中运行installr() 时，会弹出一个对话框，问你需要更新什么软件，看这个list就知道installr() 可以实现多少软件的更新（注意如果要更新RStudio，那么最好在R里跑命令）。","categories":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"},{"name":"编程","slug":"Date/Program","permalink":"https://yanlongchn.github.io/categories/Date/Program/"}],"tags":[{"name":"R","slug":"R","permalink":"https://yanlongchn.github.io/tags/R/"},{"name":"数据分析","slug":"数据分析","permalink":"https://yanlongchn.github.io/tags/数据分析/"}],"keywords":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"},{"name":"编程","slug":"Date/Program","permalink":"https://yanlongchn.github.io/categories/Date/Program/"}]},{"title":"CPDA第二日","slug":"CPDA第二日","date":"2016-11-23T00:45:27.000Z","updated":"2016-12-09T01:38:52.546Z","comments":true,"path":"2016/11/23/CPDA第二日/","link":"","permalink":"https://yanlongchn.github.io/2016/11/23/CPDA第二日/","excerpt":"&emsp;&emsp;","text":"&emsp;&emsp;","categories":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"},{"name":"编程","slug":"Date/Program","permalink":"https://yanlongchn.github.io/categories/Date/Program/"}],"tags":[{"name":"R","slug":"R","permalink":"https://yanlongchn.github.io/tags/R/"},{"name":"CPDA","slug":"CPDA","permalink":"https://yanlongchn.github.io/tags/CPDA/"}],"keywords":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"},{"name":"编程","slug":"Date/Program","permalink":"https://yanlongchn.github.io/categories/Date/Program/"}]},{"title":"R-RSTUDIO-RATTLE-SAMPLE","slug":"R-RSTUDIO-RATTLE-SAMPLE","date":"2016-11-21T04:53:00.000Z","updated":"2016-11-23T01:05:46.401Z","comments":true,"path":"2016/11/21/R-RSTUDIO-RATTLE-SAMPLE/","link":"","permalink":"https://yanlongchn.github.io/2016/11/21/R-RSTUDIO-RATTLE-SAMPLE/","excerpt":"R安装 R安装包下载地址：https://mirrors.tuna.tsinghua.edu.cn/CRAN/index.html R函数包下载地址：https://mirrors.tuna.tsinghua.edu.cn/CRAN/ RSTUDIO下载地址：https://www.rstudio.com/products/rstudio/download/ R基础环境配置&gt; install.package(&quot;RGtk2&quot;)&gt; install.package(&quot;rattle&quot;)&gt; install.package(&quot;caret&quot;)","text":"R安装 R安装包下载地址：https://mirrors.tuna.tsinghua.edu.cn/CRAN/index.html R函数包下载地址：https://mirrors.tuna.tsinghua.edu.cn/CRAN/ RSTUDIO下载地址：https://www.rstudio.com/products/rstudio/download/ R基础环境配置&gt; install.package(&quot;RGtk2&quot;)&gt; install.package(&quot;rattle&quot;)&gt; install.package(&quot;caret&quot;) sample函数随机抽引入一个随机种子&gt; set.seed(1234)创建对象x，由1~10组成&gt; x &lt;- seq(1,10);x [1] 1 2 3 4 5 6 7 8 9 10利用sample进行无放回抽样&gt; a &lt;-sample(x,5,replace = FALSE);a [1] 2 6 5 8 9利用sample进行有放回抽样&gt; a &lt;-sample(x,5,replace = TRUE);a [1] 7 1 3 7 6利用sample进行有放回抽样&gt; a &lt;-sample(x,8,replace = TRUE);a [1] 7 6 3 10 3 9 3 3利用sample进行无放回抽样&gt; a &lt;-sample(x,8,replace = FALSE);a [1] 2 3 9 8 1 6 5 7 等比抽&gt; rate &lt;- sum(user$是否付费==0)/nrow(user)&gt; d &lt;- 1:nrow(user)&gt; index1 &lt;- sample(d[user$是否付费==0],10000*rate)&gt; index2 &lt;- sample(d[user$是否付费==1],10000*(1-rate))&gt; user_sample1 &lt;- user[c(index1,index2),] createDataPartition函数&gt; library(&quot;caret&quot;)&gt; iris &lt;- read_csv(&quot;F:/SPSS/sample/iris.csv&quot;)&gt; splitindex &lt;- createDataPartition(iris$Species,times=1,p=0.1,list = FALSE)&gt; splitindex Resample1 [1,] 3 [2,] 13 [3,] 15 [4,] 22 [5,] 42 [6,] 59 [7,] 60 [8,] 62 [9,] 76 [10,] 87 [11,] 115 [12,] 127 [13,] 131 [14,] 140 [15,] 150 &gt; sample &lt;- iris[splitindex,]&gt; table(sample$Species); setosa versicolor virginica 5 5 5 &gt; prop.table(table(sample$Species)) setosa versicolor virginica 0.3333333 0.3333333 0.333333 数据哑变量处理(虚拟化处理dummyVars)&gt; head(iris) A B C D Species 1 5.1 3.5 1.4 0.2 setosa 2 4.9 3.0 1.4 0.2 setosa 3 4.7 3.2 1.3 0.2 setosa 4 4.6 3.1 1.5 0.2 setosa 5 5.0 3.6 1.4 0.2 setosa 6 5.4 3.9 1.7 0.4 setosa &gt; colnames(iris) [1] &quot;A&quot; &quot;B&quot; &quot;C&quot; &quot;D&quot; &quot;Species&quot; &gt; fit &lt;- lm(A~.,data = iris)&gt; summary(fit) Call: lm(formula = A ~ ., data = iris) Residuals: Min 1Q Median 3Q Max -0.79411 -0.22421 0.00549 0.20443 0.73305 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 2.15858 0.27939 7.726 1.73e-12 *** B 0.50107 0.08615 5.816 3.73e-08 *** C 0.82879 0.06829 12.136 &lt; 2e-16 *** D -0.32210 0.15128 -2.129 0.03494 * Speciesversicolor -0.71408 0.24015 -2.974 0.00345 ** Speciesvirginica -1.00962 0.33404 -3.022 0.00297 ** --- Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 Residual standard error: 0.3064 on 144 degrees of freedom Multiple R-squared: 0.8677, Adjusted R-squared: 0.8631 F-statistic: 188.8 on 5 and 144 DF, p-value: &lt; 2.2e-16 &gt; str(iris) Classes ‘tbl_df’, ‘tbl’ and &apos;data.frame&apos;: 150 obs. of 5 variables: $ A : num 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ... $ B : num 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... $ C : num 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... $ D : num 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... $ Species: chr &quot;setosa&quot; &quot;setosa&quot; &quot;setosa&quot; &quot;setosa&quot; ... dummyVars用法dummyVars(formula,data,sep=&quot;.&quot;,levelsOnly=FALSE,fullRank=FALSE,…)&gt; dmy &lt;- dummyVars(~.,data = iris,sep = &quot;-&quot;)&gt; trsf &lt;- data.frame(predict(dmy,newdata=iris))&gt; trsf A B C D Speciessetosa Speciesversicolor Speciesvirginica 1 5.1 3.5 1.4 0.2 1 0 0 2 4.9 3.0 1.4 0.2 1 0 0 3 4.7 3.2 1.3 0.2 1 0 0 4 4.6 3.1 1.5 0.2 1 0 0 5 5.0 3.6 1.4 0.2 1 0 0 6 5.4 3.9 1.7 0.4 1 0 0 7 4.6 3.4 1.4 0.3 1 0 0 8 5.0 3.4 1.5 0.2 1 0 0 9 4.4 2.9 1.4 0.2 1 0 0 10 4.9 3.1 1.5 0.1 1 0 0 [ reached getOption(&quot;max.print&quot;) -- omitted 140 rows ]","categories":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"}],"tags":[{"name":"R","slug":"R","permalink":"https://yanlongchn.github.io/tags/R/"},{"name":"数据分析","slug":"数据分析","permalink":"https://yanlongchn.github.io/tags/数据分析/"},{"name":"RSTUDIO","slug":"RSTUDIO","permalink":"https://yanlongchn.github.io/tags/RSTUDIO/"},{"name":"RATTLE","slug":"RATTLE","permalink":"https://yanlongchn.github.io/tags/RATTLE/"}],"keywords":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"}]},{"title":"如何用SPSS和Clementine处理缺失值、离群值、极值？","slug":"如何用SPSS和Clementine处理缺失值、离群值、极值？","date":"2016-11-17T06:00:20.000Z","updated":"2016-11-17T09:00:12.160Z","comments":true,"path":"2016/11/17/如何用SPSS和Clementine处理缺失值、离群值、极值？/","link":"","permalink":"https://yanlongchn.github.io/2016/11/17/如何用SPSS和Clementine处理缺失值、离群值、极值？/","excerpt":"一、什么是预处理、预分析？&emsp;&emsp;高质量数据是数据分析的前提和分析结论可靠性的保障。尽管在获取数据源时数据分析师格外谨慎，耗费大量的时间，但数据质量仍然需持续关注。不管是一手还是二手数据源，总是会存在一些质量问题。同时，为了满足数据分析、挖掘的实际需要，对噪声数据如何处理，是丢弃还是补充，或者重新计算新的数据变量，这些不是随意决定的，这就是数据预处理的一个过程，是在数据分析、挖掘开始前对数据源的审核和判断，是数据分析必不可少的一项。本文暂只简单讨论一下缺失值、异常值的处理。","text":"一、什么是预处理、预分析？&emsp;&emsp;高质量数据是数据分析的前提和分析结论可靠性的保障。尽管在获取数据源时数据分析师格外谨慎，耗费大量的时间，但数据质量仍然需持续关注。不管是一手还是二手数据源，总是会存在一些质量问题。同时，为了满足数据分析、挖掘的实际需要，对噪声数据如何处理，是丢弃还是补充，或者重新计算新的数据变量，这些不是随意决定的，这就是数据预处理的一个过程，是在数据分析、挖掘开始前对数据源的审核和判断，是数据分析必不可少的一项。本文暂只简单讨论一下缺失值、异常值的处理。 二、如何发现数据质量问题，例如，如何发现缺失值？1、SPSS是如何做到的？（1）系统缺失值、空白值 每一个变量均有可能出现系统缺失或者空白，当数据量巨大时我们根本无法用眼睛看出是否有缺失，最明智的做法是把这项任务交给数据分析工具，比如Excel，可通过数据有效性、筛选、查找、计数等功能去实现，如果是SPSS数据源，可以通过描述统计之“频率”项来实现。 http://www.datasoldier.net/post/yuchuli.htmlhttp://www.afenxi.com/post/3872","categories":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"},{"name":"SPSS","slug":"Date/Spss","permalink":"https://yanlongchn.github.io/categories/Date/Spss/"}],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://yanlongchn.github.io/tags/数据分析/"},{"name":"SPSS","slug":"categories-spss","permalink":"https://yanlongchn.github.io/tags/categories-spss/"},{"name":"Clementine","slug":"Clementine","permalink":"https://yanlongchn.github.io/tags/Clementine/"}],"keywords":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"},{"name":"SPSS","slug":"Date/Spss","permalink":"https://yanlongchn.github.io/categories/Date/Spss/"}]},{"title":"入门级扫盲贴","slug":"入门级扫盲贴","date":"2016-11-15T05:21:50.481Z","updated":"2016-11-16T04:25:12.548Z","comments":true,"path":"2016/11/15/入门级扫盲贴/","link":"","permalink":"https://yanlongchn.github.io/2016/11/15/入门级扫盲贴/","excerpt":"数据分析的步骤有哪些？数据分析有极广泛的应用范围，这是一个扫盲贴。典型的数据分析可能包含以下三个步骤：","text":"数据分析的步骤有哪些？数据分析有极广泛的应用范围，这是一个扫盲贴。典型的数据分析可能包含以下三个步骤： 探索性数据分析，","categories":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"}],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://yanlongchn.github.io/tags/数据分析/"},{"name":"DataAnalysis","slug":"DataAnalysis","permalink":"https://yanlongchn.github.io/tags/DataAnalysis/"}],"keywords":[{"name":"数据","slug":"Date","permalink":"https://yanlongchn.github.io/categories/Date/"}]},{"title":"LetsEncrypt域名加SSL","slug":"LetsEncrypt域名加SSL","date":"2016-11-15T05:21:50.478Z","updated":"2016-11-17T06:36:51.405Z","comments":true,"path":"2016/11/15/LetsEncrypt域名加SSL/","link":"","permalink":"https://yanlongchn.github.io/2016/11/15/LetsEncrypt域名加SSL/","excerpt":"CentOSLetsEncrypt域名加SSL LetsEncrypt篇git clone https://github.com/letsencrypt/letsencryptcd letsencryptsudo service nginx stop./letsencrypt-auto certonly --standalone -d your_domain.comsudo service nginx start==将your_domain.com改为自己的域名。==","text":"CentOSLetsEncrypt域名加SSL LetsEncrypt篇git clone https://github.com/letsencrypt/letsencryptcd letsencryptsudo service nginx stop./letsencrypt-auto certonly --standalone -d your_domain.comsudo service nginx start==将your_domain.com改为自己的域名。== Ghost篇vi /etc/nginx/conf.d/ghost.conf全部清空==(在非插入模式下输入:.,$d)==并粘贴进去下列配置，注意需要更改所有的“your_domain.com”为自己的域名，还需要正确的配置自己的密钥位置。 server { listen 80; server_name your_domain.com; return 301 https://your_domain.com$request_uri; } server { listen 443 ssl; server_name your_domain.com; ssl_certificate /etc/letsencrypt/live/your_domain.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/your_domain.com/privkey.pem; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers HIGH:!aNULL:!MD5; add_header Strict-Transport-Security &quot;max-age=63072000; includeSubyour_domains; preload&quot;; add_header X-Frame-Options &quot;DENY&quot;; access_log /var/log/nginx/ghost.log; error_log /var/log/nginx/ghost_error.log; location / { proxy_set_header X-Real-IP $remote_addr; proxy_set_header HOST $http_host; proxy_set_header X-NginX-Proxy true; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_pass http://127.0.0.1:2368; proxy_redirect off; } }","categories":[{"name":"编程","slug":"Program","permalink":"https://yanlongchn.github.io/categories/Program/"},{"name":"博客","slug":"Program/Blog","permalink":"https://yanlongchn.github.io/categories/Program/Blog/"}],"tags":[{"name":"LetsEncrypt","slug":"LetsEncrypt","permalink":"https://yanlongchn.github.io/tags/LetsEncrypt/"},{"name":"Ghost","slug":"Ghost","permalink":"https://yanlongchn.github.io/tags/Ghost/"},{"name":"CentOS","slug":"CentOS","permalink":"https://yanlongchn.github.io/tags/CentOS/"}],"keywords":[{"name":"编程","slug":"Program","permalink":"https://yanlongchn.github.io/categories/Program/"},{"name":"博客","slug":"Program/Blog","permalink":"https://yanlongchn.github.io/categories/Program/Blog/"}]},{"title":"centos6.5,32bit,ghostblog安装教程","slug":"centos6.5,32bit,ghostblog安装教程","date":"2016-11-15T05:21:50.476Z","updated":"2016-11-17T06:36:26.102Z","comments":true,"path":"2016/11/15/centos6.5,32bit,ghostblog安装教程/","link":"","permalink":"https://yanlongchn.github.io/2016/11/15/centos6.5,32bit,ghostblog安装教程/","excerpt":"基本环境： 服务器：BANDWAGON,10G,512M,CENTOS6.5; 本地：WIN10-64b,PUTTY;","text":"基本环境： 服务器：BANDWAGON,10G,512M,CENTOS6.5; 本地：WIN10-64b,PUTTY; 安装过程: PUTTY，ROOT LOGIN; yum update yum groupinstall &quot;Development Tools&quot;yum install wgetyum install nginxnginx -vcd /etc/nginx/conf.drm default.confvi ghost.conf server { listen 80; server_name domain.com; location / { proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $http_host; proxy_pass http://127.0.0.1:2368; proxy_set_header REMOTE-HOST $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } } service nginx restart chkconfig nginx on yum install libtool automake autoconf gcc-c++ openssl-devel cd /tmpwget http://nodejs.org/dist/v0.12.17/node-v0.12.17.tar.gz tar -zvxf node-v0.12.17.tar.gzcd node* ./configure --prefix=/usr makemake installnode -vnpm -v cd /var/www wget https://ghost.org/zip/ghost-latest.zip -o ghost.zipunzip ghost.zip -d ghost cd ghostmv config.example.js config.js ==vi使用说明:s开始编辑,esc退出,:wq!保存并退出.== vi config.js production: { url: &apos;http://domain.com&apos;, mail: {}, npm install --production npm start --productionctrl+c npm install pm2 -gNODE_ENV=production pm2 start index.js --name &quot;ghost&quot;pm2 startup centospm2 save ==如果要用mysql，在npm install –production之前执行以下:== yum install mysql mysql-server service mysqld startchkconfig mysqld onmysql_secure_installation ==y,y,n,y,y== vi /etc/my.cnf [client] default-character-set=utf8 [mysql] default-character-set=utf8 [mysqld] character-set-server=utf8 collation-server=utf8_general_ci mysql -u root -pcreate database ghost;GRANT ALL PRIVILEGES ON ghostdata.* To &#39;ghost&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;; #ghostdata是数据库，ghost是用户名，123456是密码FLUSH PRIVILEGES; vi config.js production: { url: &apos;domain.com&apos;, mail: {}, database: { client: &apos;mysql&apos; connection: { host : &apos;127.0.0.1&apos;, user : &apos;ghost&apos;, password : &apos;123456&apos;, database : &apos;ghostdata&apos;, charset : &apos;utf8&apos; }, server: { host: &apos;127.0.0.1&apos;, port: &apos;2368&apos; } } SS shadowsocks wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh chmod +x shadowsocks.sh ./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log SS卸载 ./shadowsocks.sh uninstalls SS多用户配置方案 vi /etc/shadowsocks.json { &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;local_address&quot;:&quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;port_password&quot;:{ &quot;10086&quot;:&quot;123456&quot;, &quot;10087&quot;:&quot;123456&quot;, &quot;10088&quot;:&quot;123456&quot;, &quot;10089&quot;:&quot;123456&quot;, &quot;10090&quot;:&quot;123456&quot; }, &quot;timeout&quot;:600, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast\\_open&quot;: true } SS管理 /etc/init.d/shadowsocks start /etc/init.d/shadowsocks stop /etc/init.d/shadowsocks restart /etc/init.d/shadowsocks status SS加速 ==net-speeder:== cd /tmp wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpmrpm -ivh epel-release-X-Y.noarch.rpm yum install libnet libpcap libnet-devel libpcap-develwget https://github.com/snooda/net-speeder/archive/master.zip unzip master.zipcd net-* chmod +x build.shsh build.sh cp ./net_speeder /usr/bin ifconfig#确定网卡名 /usr/bin/net_speeder eth0 &quot;000.000.000.000&quot; &gt;/dev/null 2&gt;&amp;1 &amp;#启动 echo &#39;/usr/bin/net_speeder eth0 &quot;000.000.000.000&quot; &gt;/dev/null 2&gt;&amp;1 &amp;&#39; &gt;&gt; /etc/rc.local#开机启动 ==开启Hybla(非openvz使用)== sysctl net.ipv4.tcp_available_congestion_control sysctl net.ipv4.tcp_congestion_control=hyblavi sysctl.conf net.ipv4.tcp_congestion_control = hybla ==tcp优化== vi /etc/security/limits.conf * soft nofile 51200 * hard nofile 51200 ulimit -n 51200vi /etc/sysctl.conf fs.file-max = 51200 net.core.rmem_max = 67108864 net.core.wmem_max = 67108864 net.core.netdev_max_backlog = 250000 net.core.somaxconn = 3240000 net.ipv4.tcp_syncookies = 1 net.ipv4.tcp_tw_reuse = 1 net.ipv4.tcp_tw_recycle = 0 net.ipv4.tcp_fin_timeout = 30 net.ipv4.tcp_keepalive_time = 1200 net.ipv4.ip_local_port_range = 10000 65000 net.ipv4.tcp_max_syn_backlog = 8192 net.ipv4.tcp_max_tw_buckets = 5000 net.ipv4.tcp_fastopen = 3 net.ipv4.tcp_rmem = 4096 87380 67108864 net.ipv4.tcp_wmem = 4096 65536 67108864 net.ipv4.tcp_mtu_probing = 1 sysctl -p/etc/init.d/shadowsocks restart","categories":[{"name":"编程","slug":"Program","permalink":"https://yanlongchn.github.io/categories/Program/"},{"name":"博客","slug":"Program/Blog","permalink":"https://yanlongchn.github.io/categories/Program/Blog/"}],"tags":[{"name":"Ghost","slug":"Ghost","permalink":"https://yanlongchn.github.io/tags/Ghost/"},{"name":"CentOS","slug":"CentOS","permalink":"https://yanlongchn.github.io/tags/CentOS/"}],"keywords":[{"name":"编程","slug":"Program","permalink":"https://yanlongchn.github.io/categories/Program/"},{"name":"博客","slug":"Program/Blog","permalink":"https://yanlongchn.github.io/categories/Program/Blog/"}]},{"title":"证书自动更新任务","slug":"证书自动更新任务","date":"2016-11-14T11:10:21.000Z","updated":"2016-12-05T05:37:07.754Z","comments":true,"path":"2016/11/14/证书自动更新任务/","link":"","permalink":"https://yanlongchn.github.io/2016/11/14/证书自动更新任务/","excerpt":"增加crontab自动任务crontab -lcrontab -e30 3 13 * 1 ./certbot-auto renew0 4 * * 1 pm2 restart ghost:wq!","text":"增加crontab自动任务crontab -lcrontab -e30 3 13 * 1 ./certbot-auto renew0 4 * * 1 pm2 restart ghost:wq! Python2.6 升级2.7.8wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgztar -xvf Python-2.7.8.tgzcd Python-2.7.8./configure --prefix=/usr/local/python2.7makemake install==创建链接来使系统默认python变为python2.7==·mv /usr/bin/python /usr/bin/python2.6.9ln -fs /usr/local/python2.7/bin/python2.7 /usr/bin/python==修改yum配置(否则yum无法正常运行)==vi /usr/bin/yum==将第一行的#!/usr/bin/python修改为系统原有的python版本地址#!/usr/bin/python2.6.9====至此CentOS6.3系统Python已成功升级至2.7.6版本。==","categories":[{"name":"编程","slug":"Program","permalink":"https://yanlongchn.github.io/categories/Program/"},{"name":"博客","slug":"Program/Blog","permalink":"https://yanlongchn.github.io/categories/Program/Blog/"}],"tags":[{"name":"LetsEncrypt","slug":"LetsEncrypt","permalink":"https://yanlongchn.github.io/tags/LetsEncrypt/"},{"name":"Ghost","slug":"Ghost","permalink":"https://yanlongchn.github.io/tags/Ghost/"},{"name":"CentOS","slug":"CentOS","permalink":"https://yanlongchn.github.io/tags/CentOS/"}],"keywords":[{"name":"编程","slug":"Program","permalink":"https://yanlongchn.github.io/categories/Program/"},{"name":"博客","slug":"Program/Blog","permalink":"https://yanlongchn.github.io/categories/Program/Blog/"}]}]}